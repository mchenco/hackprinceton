<!DOCTYPE html>
<!-- saved from url=(0056)file:///Users/michellechen/CODE/hackprinceton/index.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<title> Test </title>
	

	<!-- references d3 js library -->
	<script src="./Test_files/d3.v3.min.js" charset="utf-8"></script>
	<script type="text/javascript" src="./Test_files/test.js"></script>

	<!-- css styles -->
	<style type="text/css">
		div.bar {
			display: inline-block;
			width: 20px;
			height: 75px;
			background-color: teal;
			margin-right: 2px;
		}
		.axis path,
		.axis line {
		    fill: none;
		    stroke: black;
		    shape-rendering: crispEdges;
		}

		.axis text {
		    font-family: sans-serif;
		    font-size: 11px;
		}

		.form-control{
			margin: = auto;
			width: 80%;
		}
	</style>

	<!-- link html to css -->
	<link rel="stylesheet" href="./Test_files/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
	</head>

<!-- the real shit begins -->
	<body>
		<form class="form-inline">
			<div class="form-group">
				<input type="name" class="form-control" id="exampleInputEmail1" placeholder="Name"><br>
			</div>
			<div class="form-group">
				<input type="date" class="form-control" id="exampleInputEmail1" placeholder="Start Date"><br>
			</div>
			<div class="form-group">
				<input type="date" class="form-control" id="exampleInputEmail1" placeholder="End Date"><br>
			</div>
			<button type="submit" class="btn btn-default">Submit</button>
		</form>

		

		<!-- calls the d3 library, written in javascript -->
		<script type="text/javascript">
			//parse data

			// $.ajax({
			// 	type: 'GET',
			// 	url: //insert url here
			// 	data: "id " //what is this
			// 	success:function(feed){
			// 		var dataset = ;
			// 	}
			// })

			// var raw_data = //this is where the HTML GET request data will go;
			// 	dataset = JSON.parse(raw_data);

			// test_data = {'iceland': {'occurrances': 64, 'sentiment': 0.03712}, 'merkel': {'occurrances': 79, 'sentiment': -0.13024999999999998}, 'clinton': {'occurrances': 525, 'sentiment': -0.04008000000000002}, 'trump': {'occurrances': 710, 'sentiment': 0.015139999999999997}, 'interest%20rates': {'occurrances': 263, 'sentiment': 0.24703}};

			// $.get( "Guardian_API.py", function(data){
			// 		alert("Data Loaded: " + data);
			// 	}
			// )

			// test_data = {"iceland": {"occurrances": 64, "sentiment": {"news": 0.03712, "twitter": 0.2964818577777777}}, "merkel": {"occurrances": 79, "sentiment": {"news": -0.13024999999999998, "twitter": 0.17112578469135806}}, "clinton": {"occurrances": 525, "sentiment": {"news": -0.16593, "twitter": 0.1170851114951989}}, "trump": {"occurrances": 710, "sentiment": {"news": -0.0018600000000000005, "twitter": 0.25051745051321295}}, "interest%20rates": {"occurrances": 263, "sentiment": {"news": 0.24703000000000008, "twitter": 0.1367785520634921}}};

			
			// //accesses first element in dictionary
			// var key_array = [];
			// for (i = 0; i < test_data.length; i++){
			// 	key_array[i] = test_data[Object.keys(test_data)[i]];
			// }

			// var occur_array = [];
			// for (i = 0; i < test_data.length; i++){
			// 	occur_array[i] = (test_data[Object.keys(test_data)[i]][Object.keys(test_data[Object.keys(test_data)[i]])[0]]);
			// }

			// var news_sentiment_array = [];
			// for (i = 0; i < test_data.length; i++){
			// 	news_sentiment_array[i] = test_data[Object.keys(test_data)[i]][Object.keys(test_data[Object.keys(test_data)[i]])[1]][Object.keys(test_data[Object.keys(test_data)[i]][Object.keys(test_data[Object.keys(test_data)[i]])[1]])[0]];
			// }

			// var twitter_sentiment_array = [];
			// for (i = 0; i < test_data.length; i++){
			// 	news_sentiment_array[i] = test_data[Object.keys(test_data)[i]][Object.keys(test_data[Object.keys(test_data)[i]])[1]][Object.keys(test_data[Object.keys(test_data)[i]][Object.keys(test_data[Object.keys(test_data)[i]])[1]])[1]];
			// }

			// var key = (test_data[Object.keys(test_data)[0]]);
			// var occur = (test_data[Object.keys(test_data)[0]][Object.keys(test_data[Object.keys(test_data)[0]])[0]]);

			// var sentiment = key[Object.keys(key)[1]];
			// var news_sentiment = sentiment[Object.keys(sentiment)[0]]
			// var news_sentiment = test_data[Object.keys(test_data)[0]][Object.keys(test_data[Object.keys(test_data)[0]])[1]][Object.keys(test_data[Object.keys(test_data)[0]][Object.keys(test_data[Object.keys(test_data)[0]])[1]])[0]];
			// var twitter_sentiment = (test_data[Object.keys(test_data)[0]][Object.keys(test_data[Object.keys(test_data)[0]])[1]][Object.keys(test_data[Object.keys(test_data)[0]][Object.keys(test_data[Object.keys(test_data)[0]])[1]])[1]]);
			// alert();


			// let data = JSON.parse(test);
			// alert(data);

			$.ajax({
        		type: 'GET',
       			url: 'test.js',
        		dataType: 'js',
        		success: function (data) {
            		alert("it work");
        	}
		})

			// //set up graphics canvas
			// var canvas_width = 1260; //TODO: set to size of browser
			// var canvas_height = 675;
			// var padding = 30; //for chart edges

			// // var dataset = [1.0, 0.4, 0.2, 0.23, -0.7, 0.9, -0.23, -0.86];
			// // var dataset = [30, 100, 730, 1, 310, 413, 292, 103, 634, 625];

			// //initializing the scale for the x axis
			// var xScale = d3.scale.linear()
			// 					 .domain([-1, 1])
			// 					 .range([padding, canvas_width-padding]);

			// //initializing radius scale
			// var rScale = d3.scale.linear()
			// 					 .domain([0, d3.max(occur_array)])
			// 					 .range([5, 30])

			// //initializing the xAxis
			// var xAxis = d3.svg.axis()
			// 				  .scale(xScale)
			// 				  .orient("bottom")
			// 				  .ticks(2);

			// //initilizing canvas svg object
			// var svg = d3.select("body")
			// 			.append("svg")
			// 			.attr("width", canvas_width)
			// 			.attr("height", canvas_height);

			// //creating each circle datapoint
			// svg.selectAll("circle")
			//    .data(test_data)
			//    .enter()
			//    .append("circle")
			//    .attr("cx", function(d) {return xScale();}) //expand on this
			//    .attr("cy", function(d) {return canvas_height/2;})
			//    .attr("r", function(d) {return rScale();})
			//    .attr("fill", function(d) {return "rgba(0, 255, 0, 0.5)"});

			// //creating labels for each circle datapoint
			// svg.selectAll("text")
   // 			   .data(test_data)
  	// 		   .enter()
   // 			   .append("text")
   // 			   .text(function(d) {return (test_data[Object.keys(test_data)[0]]);})
   // 			   .attr("x", function(d) {return xScale(((test_data[Object.keys(test_data)[0]])[Object.keys((test_data[Object.keys(test_data)[0]]))[0]]);)- 15})
   // 			   .attr("y", function(d) {return canvas_height/2 - 15})
   // 			   .attr("font-family", "sans-serif")
   // 			   .attr("font-size", "11px");

			// //calling and creating the axis
			// svg.append("g")
			//    .attr("class", "axis")
			//    .attr("transform", "translate(0," + (canvas_height/2 + 20) + ")")
   //  		   .call(xAxis);

		</script>
	


</body></html>